{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\euHabit\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport PropTypes from 'prop-types';\nimport { validatePassword } from './validate';\nimport image from './image.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:8080/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"logo mt-3\",\n            children: \"MNT Meditech \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"title\",\n            children: \"euHabit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            id: \"myform\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: e => setUserName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"mt-4\",\n                children: (() => {\n                  //if (username == \"root\" || (validatePassword(parseInt(username, 16)) === true && password == \"test\")) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      class: \"btn btn-login\",\n                      type: \"submit\",\n                      children: \"Access\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 18\n                  }, this); // }\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/euHabit/src/Login.js"],"names":["React","useState","PropTypes","validatePassword","image","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './Login.css';\r\nimport PropTypes from 'prop-types';\r\nimport {validatePassword} from './validate';\r\nimport image from './image.png';\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch('http://localhost:8080/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\n\r\nexport default function Login({setToken}) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    setToken(token);\r\n  }\r\n  return(\r\n    <div className=\"login\"> \r\n    <div class=\"container\">\r\n    <div class=\"row\">\r\n    <div class=\"col\">\r\n    <p class=\"logo mt-3\">MNT Meditech </p>\r\n    </div>\r\n    </div>\r\n    <div class=\"row\">\r\n    <div class=\"col\">\r\n      <h1 class=\"title\">euHabit</h1>\r\n      <img src={image}  />\r\n      </div>\r\n      <div class=\"col\">\r\n      <form onSubmit={handleSubmit} id=\"myform\">\r\n        <ul>\r\n        <p>Username</p>\r\n          <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\r\n        </ul>\r\n        <ul>\r\n          <p>Password</p>\r\n          <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n        \r\n        <p class=\"mt-4\">\r\n      {(() => {\r\n        //if (username == \"root\" || (validatePassword(parseInt(username, 16)) === true && password == \"test\")) {\r\n          return(<div>\r\n            <button class=\"btn btn-login\" type=\"submit\">Access</button>\r\n          </div>);\r\n       // }\r\n      })()}\r\n    </p>\r\n    </ul>\r\n      </form>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}